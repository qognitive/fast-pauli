#############################################################################
# This code is part of Fast Pauli.
#
# (C) Copyright Qognitive Inc 2024.
#
# This code is licensed under the BSD 2-Clause License. You may
# obtain a copy of this license in the LICENSE.txt file in the root directory
# of this source tree.
#
# Any modifications or derivative works of this code must retain this
# copyright notice, and modified files need to carry a notice indicating
# that they have been altered from the originals.
#############################################################################


################################################################################
# Build System
################################################################################

[build-system]
requires = [
  # scikit-build-core uses cmake as needed (do not list it here)
  "scikit-build-core",
  "setuptools_scm[toml]>=8",
]
build-backend = "scikit_build_core.build"


################################################################################
# Project
################################################################################

[project]
name = "fast_pauli"
readme = "README.md"
description = "fast pauli"
authors = [
  { name="James E. T. Smith", email="james.smith@qognitive.io" },
  { name="Eugene Rublenko", email="eugene.rublenko@qognitive.io" },
  { name="Alex Lerner", email="alex.lerner@qognitive.io" },
  { name="Sebastien Roy", email="sebastien.roy@qognitive.io" },
  { name="Jeffrey Berger", email="jeff.berger@qognitive.io" },
]
dependencies = ["numpy", "qiskit", "qiskit-algorithms"]
requires-python = ">= 3.10"
classifiers = [
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
dynamic = ["version"]


[project.optional-dependencies]
dev = [
  "cibuildwheel",
  "clang-format",
  "cmake-format",
  "pre-commit",
  "mypy",
  "ruff",
  "pytest",
  "pytest-benchmark",
  "setuptools_scm",
  "sphinx",
  "sphinx_rtd_theme",
  "sphinx-autobuild",
]
docs = [
  "cmake>=3.25",
  "sphinx",
  "sphinx-rtd-theme",
  "sphinx-copybutton",
  "sphinx-autobuild",
  "sphinxcontrib-napoleon",
  "breathe",
  "furo",
]

examples = [
]


################################################################################
# Linting/Formatting
################################################################################

[tool.mypy]
warn_redundant_casts = true
warn_unused_ignores = true

# Needed because of bug in MyPy
disallow_subclassing_any = false

mypy_path = "stubs"

disallow_untyped_calls = true
disallow_untyped_defs = true
check_untyped_defs = true
warn_return_any = true
no_implicit_optional = true
strict_optional = true
ignore_missing_imports = true
explicit_package_bases = true

exclude = ["docs", "build"]

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    ".venv",
    "fast_pauli/__version__.py",
    "docs",
]

line-length = 88
indent-width = 4

target-version = "py38"

[tool.ruff.lint]
select = [
  "F", # PyFlakes (https://docs.astral.sh/ruff/rules/#pyflakes-f)
  "E", "W", # pycodestyle (https://docs.astral.sh/ruff/rules/#pycodestyle-e-w)
  "I", # Isort (https://docs.astral.sh/ruff/rules/#isort-i)
  "N", # PEP-8 Naming (https://docs.astral.sh/ruff/rules/#pep8-naming-n)
  "D", # pydocstyle (https://docs.astral.sh/ruff/rules/#pydocstyle-d)
  "YTT", # flake8-2020 (https://docs.astral.sh/ruff/rules/#flake8-2020-ytt)
  "ASYNC", # flake8-async (https://docs.astral.sh/ruff/rules/#flake8-async-async)
  "B", # flake8-bugbear (https://docs.astral.sh/ruff/rules/#flake8-bugbear-b)
  "UP", # flake8-bandit (https://docs.astral.sh/ruff/rules/#flake8-bandit-up)
  "SIM", # flake8-simplify (https://docs.astral.sh/ruff/rules/#flake8-simplify-sim)
]

ignore = [
  # Allow non-lowercase variable names to help the code match the math better
  "N806",
  # mypy doesn't support PEP695 (upgrading to `type` python keyword)
  "UP040",
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.format]
quote-style = "double"
docstring-code-format = true


################################################################################
# Packaging
################################################################################

# https://scikit-build-core.readthedocs.io/en/latest/#configuration
# Example: use LLVM
#  pip install -e . --verbose -C cmake.args="-DCMAKE_CXX_COMPILER=clang++-18"
[tool.scikit-build]
cmake.build-type = "Release"
build-dir = "build/{wheel_tag}"
metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"
sdist.include = ["fast_pauli/__version__.py"]
# TODO add more options here

[tool.setuptools_scm]
write_to = "fast_pauli/__version__.py"

[tool.cibuildwheel]
skip = "pp*"
test-requires = "pytest"
test-command = "pytest -s -vv --import-mode importlib {project}/tests/fast_pauli"

[tool.cibuildwheel.linux]
build = ["cp3*_x86_64"]
skip = ["*musllinux*"]

[tool.cibuildwheel.macos]
environment = "CXX=g++-14"
